@startuml
    ' REFERENCE: https://isgb.otago.ac.nz/infosci/INFO202/reference/raw/master/reference.html#Sequence%20Diagrams:Contents%20%5B%5BSequence%20Diagrams%5D%5D

    ' use strict UML mode
    skinparam style strictuml
    skinparam roundcorner 20
    skinparam BoxPadding 30
    
    actor "Customer" as customer

    box "Web Browser"
    participant "Products Page" as webpage <<webpage>>
    participant "ShoppingApp\nModule" as angular <<angular>> 

    customer -> webpage++ : opens products webpage

    create angular
    webpage -> angular : create

    webpage -> angular++ : factory()
    create "Product Factory" as productFactory <<angular>>
    angular -> productFactory : create
    angular--

    webpage -> angular++ : factory()
    create "Category Factory" as categoryFactory <<angular>>
    angular -> categoryFactory : create
    angular--


    create "Product Controller" as controller <<angular>>
    webpage -> controller++ : create
    end box
    
    box "Web Server"
    participant "Product DAO" as dao <<dao>> 
    participant "ProductModule" as jooby <<jooby>>
    end box

    controller -> productFactory++ : query()
    productFactory -> jooby++ : GET /api/products/
    jooby -> dao++ : getProducts()
    return products
    return products
    return products

    controller -> categoryFactory++ : query()
    categoryFactory -> jooby++ : GET /api/categories/
    jooby -> dao++ : getgetCategories()
    return categories
    return categories
    return categories
    controller--

    webpage -> controller++ : get categories
    return categories
    loop categories 
        webpage -> webpage : add button element for each category
    end   

    webpage -> controller++ : get products
    return products
    loop products
        webpage -> webpage : add table row for each product
    end
    
    customer -> webpage : click all category button
    webpage -> controller++ : selectAll()
    controller -> productFactory++ : query()
    productFactory -> jooby++ : GET /api/products/
    jooby -> dao++ : getProducts()
    return products
    return products
    return products
    return update webpage content
    |||
    |||
    customer -> webpage : click category button
    webpage -> webpage : get selected category : category
    webpage -> controller++ : selectCategory(category)
    controller -> categoryFactory++ : query()
    categoryFactory -> jooby++ : GET /api/categories/:category
    jooby -> dao++ : getProductsByCategory(category)
    return products
    return products
    return products
    return update webpage content
@enduml